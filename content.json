{"meta":{"title":"Hexo45","subtitle":null,"description":null,"author":"John Doe","url":"https://tony-greel.github.io"},"pages":[{"title":"关于","date":"2018-08-06T07:55:35.735Z","updated":"2018-08-06T07:55:35.734Z","comments":false,"path":"about/index.html","permalink":"https://tony-greel.github.io/about/index.html","excerpt":"","text":""},{"title":"书单","date":"2018-08-06T04:00:19.420Z","updated":"2018-07-30T18:55:52.000Z","comments":false,"path":"books/index.html","permalink":"https://tony-greel.github.io/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-08-06T04:00:19.435Z","updated":"2018-07-30T18:55:52.000Z","comments":false,"path":"categories/index.html","permalink":"https://tony-greel.github.io/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2018-08-06T04:00:19.474Z","updated":"2018-07-30T18:55:52.000Z","comments":false,"path":"repository/index.html","permalink":"https://tony-greel.github.io/repository/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-08-06T04:00:19.450Z","updated":"2018-07-30T18:55:52.000Z","comments":true,"path":"links/index.html","permalink":"https://tony-greel.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-08-06T04:00:19.490Z","updated":"2018-07-30T18:55:52.000Z","comments":false,"path":"tags/index.html","permalink":"https://tony-greel.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo简介","slug":"hello-world","date":"2018-08-06T08:03:34.196Z","updated":"2018-08-06T08:03:34.197Z","comments":true,"path":"2018/08/06/hello-world/","link":"","permalink":"https://tony-greel.github.io/2018/08/06/hello-world/","excerpt":"","text":"欢迎使用 Cmd Markdown 编辑阅读器 我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown： 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载： Windows/Mac/Linux 全平台客户端 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 新文稿 或者使用快捷键 Ctrl+Alt+N。 什么是 MarkdownMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 支持以 PDF 格式导出文稿 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 新增 Todo 列表功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]$$E=mc^2$$ 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass: passif __name__ == '__main__': # A comment print 'hello world' 4. 高效绘制 流程图12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 7. 绘制表格 项目 价格 数量 计算机 \\$1600 5 手机 \\$12 12 管线 \\$1 234 8. 更详细语法说明想要查看更详细的语法说明，可以参考我们准备的 Cmd Markdown 简明语法手册，进阶用户可以参考 Cmd Markdown 高阶语法手册 了解更多高级功能。 总而言之，不同于其它 所见即所得 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。 什么是 Cmd Markdown您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 编辑/发布/阅读 Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。 1. 实时同步预览我们将 Cmd Markdown 的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！ 2. 编辑工具栏也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 编辑区 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。 3. 编辑模式完全心无旁骛的方式编辑文字：点击 编辑工具栏 最右侧的拉伸按钮或者按下 Ctrl + M，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！ 4. 实时的云端文稿为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 编辑工具栏 的最右侧提示 已保存 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。 5. 离线模式在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。 6. 管理工具栏为了便于管理您的文稿，在 预览区 的顶部放置了如下所示的 管理工具栏： 通过管理工具栏可以： 发布：将当前的文稿生成固定链接，在网络上发布，分享 新建：开始撰写一篇新的文稿 删除：删除当前的文稿 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地 列表：所有新增和过往的文稿都可以在这里查看、操作 模式：切换 普通/Vim/Emacs 编辑模式 7. 阅读工具栏 通过 预览区 右上角的 阅读工具栏，可以查看当前文稿的目录并增强阅读体验。 工具栏上的五个图标依次为： 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落 视图：互换左边编辑区和右边预览区的位置 主题：内置了黑白两种模式的主题，试试 黑色主题，超炫！ 阅读：心无旁骛的阅读模式提供超一流的阅读体验 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境 8. 阅读模式在 阅读工具栏 点击 或者按下 Ctrl+Alt+M 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。 9. 标签、分类和搜索在编辑区任意行首位置输入以下格式的文字可以标签当前文档： 标签： 未分类 标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示： 10. 文稿发布和分享在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 (Ctrl+Alt+P) 发布这份文档给好友吧！ 再一次感谢您花费时间阅读这份欢迎稿，点击 (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！ 作者 @ghosert2016 年 07月 07日 [^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 MathJax 参考更多使用方法。 [^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，四十一种主流编程语言。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://tony-greel.github.io/categories/Hexo/"}],"tags":[]},{"title":"曾伟","slug":"ljj","date":"2018-08-06T07:54:12.000Z","updated":"2018-08-06T07:54:12.050Z","comments":true,"path":"2018/08/06/ljj/","link":"","permalink":"https://tony-greel.github.io/2018/08/06/ljj/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hexo常用命令","slug":"hexo常用命令","date":"2016-09-04T08:25:04.000Z","updated":"2018-08-06T08:10:13.411Z","comments":true,"path":"2016/09/04/hexo常用命令/","link":"","permalink":"https://tony-greel.github.io/2016/09/04/hexo常用命令/","excerpt":"","text":"1.新建一个网站，如果没有指定路径的文件夹，那么将会在默认路径下面建立网站，在建立的时候可以看到地址,[folder]可以随意命名，如：blog $ hexo init [folder] 2.创建一篇文章，[layout]为博客文章布局，可以设置为下面三种布局之一 title 随意取名，会作为你的文章的文件的名字，同时也会作为文章标题，可以在里面修改，不一定要一致 · post&nbsp;&nbsp;我一般都用post，默认就是这个 · page · draft $ hexo new [layout] 文章建立之后，在你的网站文件夹中 \\source\\_posts 路径下面可以找到创建的文章文件，是 markdown 格式的，文件后缀名为 .md, Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量,以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。 · layout 布局 · title 标题 · date 建立日期 · updated 更新日期 · comments 开启文章的评论功能 · tags 标签 · categories 分类 · permalink 覆盖文章网址3. 将更改上传到github,每次更新完博客输入这条命令，就能将文章跟新到博客了 $ hexo g -d 4.启动本地服务,可以在写完文章后查看效果 $ hexo s 5.有时候博客写完，上传giehub无效果，那么试试清除缓存 $ hexo clean 基本的hexo编写博客的使用就到这里了，使用上面几条命令就能够创建编写上传你的文章到博客去。其他的一些操作可以去hexo官网查看官方文档HEXO官方文档","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://tony-greel.github.io/categories/Hexo/"}],"tags":[]},{"title":"Hexo搭建博客","slug":"hexo搭建博客","date":"2016-09-02T15:15:04.000Z","updated":"2018-08-06T08:10:13.412Z","comments":true,"path":"2016/09/02/hexo搭建博客/","link":"","permalink":"https://tony-greel.github.io/2016/09/02/hexo搭建博客/","excerpt":"","text":"花了个半天时间把个博客搭建好了，不容易，第一篇博客就写怎么拿Hexo搭建博客吧！ Hexo是建立在Git和Node.js的基础上的，所以在搭建博客的时候需要有这两个环境，MAC跟Windows搭建都一样，都是在git下面所以不会存在什么因为系统的原因导致配置不一样，我是windows所有 1.安装git与node.js，这两个环境为搭建博客的基础，如果没有的话是搭建不了的 安装git、node.js，首先官网去下载安装包，如果是mac一行命令的事情，然后一直下一步下一步下一步就ok,没有什么其他的出问题百度吧，这里就不多说了，下面贴上两个东西的下载地址Git下找地址Node.js下找地址 2.安装Hexo 安装好Git后，桌面右击会增加两个东西 Git GUI here 、Git Bash here 这两个东西，点击Bash,就进入了Git的终端命令的界面了，你就可以快乐的敲命令了，输入 npm install -g hexo-cli刷刷刷，然后Hexo就安装好了，你就可以搭建你的博客了 3.建站 首先先创建你的网站，在git命令终端用下面这个命令 hexo init folderfolder可以自己随意命名，也可以随意指定路径，然后等待一会就把网站给你创建好了，在创建的命令信息中你可以看到自己创建的网站路径，记住这个路径，然后你可以输入hexo s这个命令启动服务来本地运行网站，浏览器输入：127.0.0.1:4000 就能够看到Hexo默认的主题我网站，这样我们就已经建好站了 4.配置到Github 首先在github上面创建一个仓库名字叫做：用户名.github.io,注意用户名一定要跟自己的github账户相同创建仓库创建好仓库之后拿到他的ssh地址或者Https地址这样我们就吧hexo对应的github仓库建立好了，然后来到博客根路径下，打开_config.yml这个文件夹找到下面这一段，将repository的内容替换成你自己刚刚拿到的ssh或HTTPs地址然后在再到下面这段，将里面的url换成你自己的：用户名.github.io(注意：这个url就是你以后博客的地址)到这里我们基本上就跟github关联起来了，但是为了以后更加方便，我们配置一下SSH 5.配置SSH 首先，终端中输入cd ~/.ssh 查看有没有SSH如果有就删除吧，然后输入ssh-keygen -t rsa -C “你的邮箱”，后面会要你输入密码，这个不用管，一直回车，最后如果出现下面这个图的样子，就是成功了然后到类似于：C:\\Users\\13085.ssh这种的目录下找到一个叫id_rsa.pub的文件，打开将里面的东西全部复制，进入GitHub到这里，SSH就全部配置完了 6.上传网站 输入命令hexo g，此时若出现如下报错：ERROR Local hexo not found in ~/blogERROR Try runing: ‘npm install hexo –save’则执行命令：npm install hexo –save若无报错，自行忽略此步骤。 然后输入hexo d,若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：npm install hexo-deployer-git –save 7.查看网站 打开浏览器输入：https://你的用户名.github.io，就能够看到你的网站了，跟前面本地看到的效果是一样的","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://tony-greel.github.io/categories/Hexo/"}],"tags":[]}]}